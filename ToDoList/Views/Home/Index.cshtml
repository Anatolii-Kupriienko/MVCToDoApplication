@model IEnumerable<ToDoList.Models.EventModel>
@{
    ViewData["Title"] = "Index";
}
<div class="container d-flex justify-content-between mt-4 mb-2">
<span>
        <a class="p-1 h5 text-light border-light bg-info border rounded" asp-action="AddNewEvent">Add new Item</a>
</span>
<div>
        <form asp-action="SwitchStorageType">
        <select asp-for="@EventModel.isXML">
                @if (EventModel.isXML == true)
                {
                    <option value="true" selected>
                        XML Storage
                    </option>
                }
                else
                {
                    <option value="true">
                        XML Storage
                    </option>
                }
                <option value="false">
            SQL Database
        </option>
    </select>
    <div>
    <button class="w-100 mt-2" type="submit">Switch</button>
    </div>
        </form>
</div>
<span>
        <a class="text-light p-1 border-light bg-info border rounded" asp-action="CategoryList">All Categories</a>
</span>
</div>
<table class="table bg-secondary border border-tertiary border-1 text-center">
    <thead>
        <tr class="align-bottom">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                Category
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCompleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    @if(item.IsCompleted==true)
            {
                <tr class="align-middle bg-success text-white h6 border rounded border-white border-1">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @if(item.DueDate!=DateTime.MinValue)
                {
                        @Html.DisplayFor(modelItem => item.DueDate)
                }else {<span>None</span>}
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SelectedCategory.name)
            </td>
            <td>
                    <input type="checkbox" checked="@item.IsCompleted" onchange="location.href='Home/ChangeCompleteStatus/@item.id'">
            </td>
            <td>
                <a class="text-danger" asp-action="DeleteEvent" asp-route-id="@item.id">Delete</a>
            </td>
        </tr>
            }else{
            <tr class="align-middle h6 text-light">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @if(item.DueDate!=DateTime.MinValue)
                {
                        @Html.DisplayFor(modelItem => item.DueDate)
                }else {<span>None</span>}
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SelectedCategory.name)
            </td>
            <td>
                    <input type="checkbox" checked="@item.IsCompleted" onchange="location.href='Home/ChangeCompleteStatus/@item.id'">
            </td>
            <td>
                <a class="text-danger" asp-action="DeleteEvent" asp-controller="Home" asp-route-id="@item.id">Delete</a>
            </td>
        </tr>
        }
}
    </tbody>
</table>
